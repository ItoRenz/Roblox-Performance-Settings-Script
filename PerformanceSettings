-- ============================================
-- ROBLOX PERFORMANCE SETTINGS SCRIPT (OPTIMIZED)
-- ============================================
-- Location: StarterPlayer > StarterPlayerScripts
-- ============================================

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local camera = Workspace.CurrentCamera or Workspace:GetPropertyChangedSignal("CurrentCamera"):Wait()

-- ============================================
-- CONFIGURATION
-- ============================================

local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

local QUALITY_PRESETS = {
	Low = { 
		renderDistance = 300,
		shadowsEnabled = false,
		particlesEnabled = false,
		postProcessing = false,
		fogEnabled = true,
		fogStart = 0,
		fogEnd = 300,
		brightness = 1.8,
		technology = Enum.Technology.Legacy,
		castShadow = false,
		environmentSpecularScale = 0,
		environmentDiffuseScale = 0.1,
		ambientIntensity = 0.4,
		outdoorAmbient = Color3.fromRGB(120, 120, 120),
		reflectance = 0
	},
	Medium = { 
		renderDistance = 900,
		shadowsEnabled = true,
		particlesEnabled = true,
		postProcessing = true,
		fogEnabled = false,
		fogStart = 0,
		fogEnd = 100000,
		brightness = 2.2,
		technology = Enum.Technology.ShadowMap,
		castShadow = true,
		environmentSpecularScale = 0.2,
		environmentDiffuseScale = 0.4,
		ambientIntensity = 0.6,
		outdoorAmbient = Color3.fromRGB(130, 130, 130),
		reflectance = 0.15
	},
	High = { 
		renderDistance = 1800,
		shadowsEnabled = true,
		particlesEnabled = true,
		postProcessing = true,
		fogEnabled = false,
		fogStart = 0,
		fogEnd = 100000,
		brightness = 2.6,
		technology = Enum.Technology.Future,
		castShadow = true,
		environmentSpecularScale = 0.35,
		environmentDiffuseScale = 0.6,
		ambientIntensity = 0.7,
		outdoorAmbient = Color3.fromRGB(135, 135, 135),
		reflectance = 0.25
	},
	Cinematic = { 
		renderDistance = 2500,
		shadowsEnabled = true,
		particlesEnabled = true,
		postProcessing = true,
		fogEnabled = false,
		fogStart = 0,
		fogEnd = 100000,
		brightness = 3,
		technology = Enum.Technology.Future,
		castShadow = true,
		environmentSpecularScale = 0.5,
		environmentDiffuseScale = 0.8,
		ambientIntensity = 0.8,
		outdoorAmbient = Color3.fromRGB(140, 140, 140),
		reflectance = 0.1
	}
}

local COLORS = {
	Low = Color3.fromRGB(255, 100, 100),
	Medium = Color3.fromRGB(255, 180, 60),
	High = Color3.fromRGB(100, 200, 100),
	Cinematic = Color3.fromRGB(138, 43, 226)
}

local currentQuality = "Medium"

-- ============================================
-- UTILITY FUNCTIONS
-- ============================================

local function saveQuality(qualityName)
	currentQuality = qualityName
	pcall(function()
		player:SetAttribute("PreferredQuality", qualityName)
	end)
end

local function getLastQuality()
	local success, saved = pcall(function()
		return player:GetAttribute("PreferredQuality")
	end)
	return (success and saved and QUALITY_PRESETS[saved]) and saved or currentQuality
end

local function debounce(func, wait)
	local lastCall = 0
	return function(...)
		local now = tick()
		if now - lastCall >= wait then
			lastCall = now
			return func(...)
		end
	end
end

-- ============================================
-- PERFORMANCE SETTINGS APPLICATION
-- ============================================

local isApplying = false
local applyQueue = nil

local function applyPerformanceSettings(qualityName)
	if isApplying then
		applyQueue = qualityName
		return
	end
	
	local preset = QUALITY_PRESETS[qualityName]
	if not preset then return end
	
	isApplying = true
	
	print("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━")
	print("🎮 Applying " .. qualityName:upper() .. " Graphics Settings")
	print("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━")
	
	-- Render Distance
	pcall(function()
		if player.Character then
			player.CameraMaxZoomDistance = preset.renderDistance
			player.CameraMinZoomDistance = 0.5
		end
		print("✓ Render Distance: " .. preset.renderDistance)
	end)
	
	-- Lighting
	pcall(function()
		Lighting.Technology = preset.technology
		Lighting.GlobalShadows = preset.shadowsEnabled
		Lighting.EnvironmentSpecularScale = preset.environmentSpecularScale
		Lighting.EnvironmentDiffuseScale = preset.environmentDiffuseScale
		Lighting.Brightness = preset.brightness
		Lighting.Ambient = Color3.new(preset.ambientIntensity, preset.ambientIntensity, preset.ambientIntensity)
		Lighting.OutdoorAmbient = preset.outdoorAmbient
		print("✓ Lighting: " .. tostring(preset.technology))
		print("✓ Shadows: " .. (preset.shadowsEnabled and "ON" or "OFF"))
	end)
	
	-- Parts Processing (Async with better memory management)
	task.spawn(function()
		local partsProcessed = 0
		local batchSize = 50
		
		pcall(function()
			local allParts = Workspace:GetDescendants()
			
			for i = 1, #allParts do
				local obj = allParts[i]
				if obj:IsA("BasePart") and obj.Parent then
					pcall(function()
						obj.CastShadow = preset.castShadow
						if obj.Material ~= Enum.Material.Plastic and obj.Material ~= Enum.Material.SmoothPlastic then
							obj.Reflectance = preset.reflectance
						end
					end)
					partsProcessed = partsProcessed + 1
				end
				
				if i % batchSize == 0 then
					task.wait()
				end
			end
			
			print("✓ Parts Processed: " .. partsProcessed)
			print("✓ Shadows: " .. (preset.castShadow and "ON" or "OFF") .. " | Reflectance: " .. (preset.reflectance * 100) .. "%")
		end)
	end)
	
	-- Particles
	task.spawn(function()
		local particleCount = 0
		pcall(function()
			for _, obj in ipairs(Workspace:GetDescendants()) do
				if (obj:IsA("ParticleEmitter") or obj:IsA("Smoke") or obj:IsA("Fire") or obj:IsA("Sparkles")) and obj.Parent then
					pcall(function() 
						obj.Enabled = preset.particlesEnabled 
					end)
					particleCount = particleCount + 1
				end
			end
			print("✓ Particles: " .. (preset.particlesEnabled and "ON" or "OFF") .. " (" .. particleCount .. " emitters)")
		end)
	end)
	
	-- Post Processing
	pcall(function()
		for _, effect in ipairs(Lighting:GetChildren()) do
			if effect:IsA("PostEffect") or effect:IsA("Atmosphere") then
				pcall(function() effect:Destroy() end)
			end
		end
		
		if preset.postProcessing then
			-- Bloom (Medium, High, Cinematic)
			local bloom = Instance.new("BloomEffect")
			bloom.Intensity = qualityName == "Cinematic" and 0.5 or (qualityName == "High" and 0.3 or 0.2)
			bloom.Size = qualityName == "Cinematic" and 32 or (qualityName == "High" and 24 or 16)
			bloom.Threshold = qualityName == "Cinematic" and 1.2 or (qualityName == "High" and 1.5 or 2)
			bloom.Parent = Lighting
			
			-- SunRays (High and Cinematic only)
			if qualityName == "High" or qualityName == "Cinematic" then
				local sunrays = Instance.new("SunRaysEffect")
				sunrays.Intensity = qualityName == "Cinematic" and 0.05 or 0.03
				sunrays.Spread = qualityName == "Cinematic" and 0.8 or 0.6
				sunrays.Parent = Lighting
			end
			
			-- Color Correction (Subtle for all)
			local colorCorrection = Instance.new("ColorCorrectionEffect")
			colorCorrection.Brightness = qualityName == "Cinematic" and 0.03 or (qualityName == "High" and 0.02 or 0.01)
			colorCorrection.Contrast = qualityName == "Cinematic" and 0.1 or (qualityName == "High" and 0.05 or 0.02)
			colorCorrection.Saturation = qualityName == "Cinematic" and 0.15 or (qualityName == "High" and 0.08 or 0.05)
			colorCorrection.TintColor = Color3.fromRGB(255, 255, 255)
			colorCorrection.Parent = Lighting
			
			if qualityName == "Cinematic" then
				local atmosphere = Instance.new("Atmosphere")
				atmosphere.Density = 0.3
				atmosphere.Offset = 0.25
				atmosphere.Color = Color3.fromRGB(199, 199, 199)
				atmosphere.Decay = Color3.fromRGB(106, 112, 125)
				atmosphere.Glare = 0.2
				atmosphere.Haze = 1.2
				atmosphere.Parent = Lighting
				
				print("✓ Cinematic Effects: Atmosphere")
			end
			
			print("✓ Post Processing: " .. qualityName)
		else
			print("✓ Post Processing: OFF")
		end
	end)
	
	-- Fog
	pcall(function()
		Lighting.FogEnabled = preset.fogEnabled
		if preset.fogEnabled then
			Lighting.FogStart = preset.fogStart
			Lighting.FogEnd = preset.fogEnd
			Lighting.FogColor = Color3.fromRGB(192, 192, 192)
		end
		print("✓ Fog: " .. (preset.fogEnabled and "ON" or "OFF"))
	end)
	
	print("✅ " .. qualityName:upper() .. " Applied!")
	print("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━")
	
	saveQuality(qualityName)
	isApplying = false
	
	if applyQueue then
		local queued = applyQueue
		applyQueue = nil
		applyPerformanceSettings(queued)
	end
end

-- ============================================
-- GUI CREATION
-- ============================================

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PerformanceGui"
screenGui.Enabled = false
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.Parent = playerGui

local toggleScreenGui = Instance.new("ScreenGui")
toggleScreenGui.Name = "PerformanceToggle"
toggleScreenGui.ResetOnSpawn = false
toggleScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
toggleScreenGui.Parent = playerGui

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = isMobile and UDim2.new(0, 180, 0, 260) or UDim2.new(0, 260, 0, 320)
mainFrame.Position = isMobile and UDim2.new(1, -190, 0, 10) or UDim2.new(1, -270, 0, 15)
mainFrame.AnchorPoint = Vector2.new(1, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
mainFrame.BackgroundTransparency = 0.05
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 12)
frameCorner.Parent = mainFrame

-- Header
local header = Instance.new("Frame")
header.Size = UDim2.new(1, 0, 0, 38)
header.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
header.BackgroundTransparency = 0.3
header.BorderSizePixel = 0
header.Parent = mainFrame

local headerCorner = Instance.new("UICorner")
headerCorner.CornerRadius = UDim.new(0, 12)
headerCorner.Parent = header

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -45, 1, 0)
titleLabel.Position = UDim2.new(0, 12, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "⚡ PERFORMANCE"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextSize = isMobile and 10 or 12
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = header

local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 28, 0, 28)
closeBtn.Position = UDim2.new(1, -34, 0, 5)
closeBtn.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
closeBtn.BackgroundTransparency = 0.15
closeBtn.BorderSizePixel = 0
closeBtn.Text = "✕"
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.TextSize = 16
closeBtn.Font = Enum.Font.GothamBold
closeBtn.AutoButtonColor = false
closeBtn.Parent = header

local closeBtnCorner = Instance.new("UICorner")
closeBtnCorner.CornerRadius = UDim.new(0, 7)
closeBtnCorner.Parent = closeBtn

closeBtn.MouseButton1Click:Connect(function()
	screenGui.Enabled = false
end)

-- Buttons Container
local container = Instance.new("Frame")
container.Size = UDim2.new(1, -12, 1, -48)
container.Position = UDim2.new(0, 6, 0, 42)
container.BackgroundTransparency = 1
container.Parent = mainFrame

local layout = Instance.new("UIListLayout")
layout.Padding = UDim.new(0, isMobile and 5 or 6)
layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
layout.Parent = container

-- Status Label
local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1, 0, 0, isMobile and 16 or 18)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "Current: " .. getLastQuality()
statusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
statusLabel.TextSize = isMobile and 9 or 10
statusLabel.Font = Enum.Font.GothamSemibold
statusLabel.Parent = container

-- FPS Counter
local fpsLabel = Instance.new("TextLabel")
fpsLabel.Size = UDim2.new(1, 0, 0, isMobile and 14 or 16)
fpsLabel.BackgroundTransparency = 1
fpsLabel.Text = "FPS: --"
fpsLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
fpsLabel.TextSize = isMobile and 8 or 9
fpsLabel.Font = Enum.Font.GothamSemibold
fpsLabel.Parent = container

-- Quality Buttons
local qualities = {"Low", "Medium", "High", "Cinematic"}
local buttons = {}

for _, qualityName in ipairs(qualities) do
	local button = Instance.new("TextButton")
	button.Size = UDim2.new(1, 0, 0, isMobile and 32 or 36)
	button.BackgroundColor3 = COLORS[qualityName]
	button.BackgroundTransparency = 0.4
	button.BorderSizePixel = 0
	button.Text = qualityName:upper()
	button.TextColor3 = Color3.fromRGB(255, 255, 255)
	button.TextSize = isMobile and 11 or 12
	button.Font = Enum.Font.GothamBold
	button.AutoButtonColor = false
	button.Parent = container
	
	buttons[qualityName] = button
	
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 8)
	corner.Parent = button
	
	button.MouseEnter:Connect(function()
		button.BackgroundTransparency = 0.2
	end)
	
	button.MouseLeave:Connect(function()
		button.BackgroundTransparency = currentQuality == qualityName and 0.1 or 0.4
	end)
	
	button.MouseButton1Click:Connect(function()
		applyPerformanceSettings(qualityName)
		statusLabel.Text = "Current: " .. qualityName
		
		for name, btn in pairs(buttons) do
			btn.BackgroundTransparency = name == qualityName and 0.1 or 0.4
		end
		
		if isMobile then
			task.wait(0.3)
			screenGui.Enabled = false
		end
	end)
end

-- ============================================
-- ANIMATED TOGGLE BUTTON
-- ============================================

local toggleButton = Instance.new("TextButton")
toggleButton.Size = isMobile and UDim2.new(0, 35, 0, 35) or UDim2.new(0, 38, 0, 38)
toggleButton.Position = isMobile and UDim2.new(1, -20, 0.5, 0) or UDim2.new(1, -22, 0.5, 0)
toggleButton.AnchorPoint = Vector2.new(0.5, 0.5)
toggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
toggleButton.BackgroundTransparency = 0.2
toggleButton.BorderSizePixel = 0
toggleButton.Text = "⚙️"
toggleButton.TextSize = isMobile and 16 or 18
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Parent = toggleScreenGui

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0.5, 0)
toggleCorner.Parent = toggleButton

local toggleStroke = Instance.new("UIStroke")
toggleStroke.Color = Color3.fromRGB(80, 80, 100)
toggleStroke.Thickness = isMobile and 1 or 1.5
toggleStroke.Transparency = 0.3
toggleStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
toggleStroke.Parent = toggleButton

-- Animation state
local pulseConnection
local breathingConnection
local baseSize = toggleButton.Size

local function stopAllAnimations()
	if pulseConnection then
		pulseConnection:Disconnect()
		pulseConnection = nil
	end
	if breathingConnection then
		breathingConnection:Disconnect()
		breathingConnection = nil
	end
	
	for _, child in ipairs(toggleButton:GetChildren()) do
		if child:IsA("UIStroke") and child ~= toggleStroke then
			child:Destroy()
		end
	end
	
	toggleButton.Size = baseSize
end

local function startPulseEffect()
	stopAllAnimations()
	
	local strokeCopy = Instance.new("UIStroke")
	strokeCopy.Color = Color3.fromRGB(100, 180, 255)
	strokeCopy.Thickness = 0
	strokeCopy.Transparency = 1
	strokeCopy.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	strokeCopy.Parent = toggleButton
	
	pulseConnection = RunService.Heartbeat:Connect(function()
		local pulse = (math.sin(tick() * 2) + 1) / 2
		strokeCopy.Thickness = 2 + (pulse * 3)
		strokeCopy.Transparency = 0.3 + (pulse * 0.5)
	end)
end

local function startBreathingAnimation()
	stopAllAnimations()
	
	breathingConnection = RunService.Heartbeat:Connect(function()
		local breath = (math.sin(tick() * 1.5) * 0.08) + 1
		toggleButton.Size = UDim2.new(
			baseSize.X.Scale * breath,
			baseSize.X.Offset * breath,
			baseSize.Y.Scale * breath,
			baseSize.Y.Offset * breath
		)
	end)
end

toggleButton.MouseButton1Click:Connect(function()
	local wasBreathing = breathingConnection ~= nil
	stopAllAnimations()
	
	local tweenInfo = TweenInfo.new(0.08, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
	local t1 = TweenService:Create(toggleButton, tweenInfo, {
		Size = UDim2.new(baseSize.X.Scale, baseSize.X.Offset * 0.85, baseSize.Y.Scale, baseSize.Y.Offset * 0.85)
	})
	t1:Play()
	t1.Completed:Wait()
	
	local t2 = TweenService:Create(toggleButton, TweenInfo.new(0.12, Enum.EasingStyle.Back), {
		Size = UDim2.new(baseSize.X.Scale, baseSize.X.Offset * 1.15, baseSize.Y.Scale, baseSize.Y.Offset * 1.15)
	})
	t2:Play()
	t2.Completed:Wait()
	
	local t3 = TweenService:Create(toggleButton, TweenInfo.new(0.1, Enum.EasingStyle.Quad), {
		Size = baseSize
	})
	t3:Play()
	t3.Completed:Wait()
	
	if wasBreathing then
		startBreathingAnimation()
	end
	
	screenGui.Enabled = not screenGui.Enabled
end)

toggleButton.MouseEnter:Connect(function()
	local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad)
	TweenService:Create(toggleButton, tweenInfo, {
		BackgroundTransparency = 0,
		BackgroundColor3 = Color3.fromRGB(60, 60, 80)
	}):Play()
	TweenService:Create(toggleStroke, tweenInfo, {
		Transparency = 0,
		Color = Color3.fromRGB(120, 150, 255)
	}):Play()
	
	startPulseEffect()
	TweenService:Create(toggleButton, tweenInfo, {
		Size = UDim2.new(baseSize.X.Scale, baseSize.X.Offset * 1.1, baseSize.Y.Scale, baseSize.Y.Offset * 1.1)
	}):Play()
end)

toggleButton.MouseLeave:Connect(function()
	local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad)
	TweenService:Create(toggleButton, tweenInfo, {
		BackgroundTransparency = 0.2,
		BackgroundColor3 = Color3.fromRGB(40, 40, 50)
	}):Play()
	TweenService:Create(toggleStroke, tweenInfo, {
		Transparency = 0.3,
		Color = Color3.fromRGB(80, 80, 100)
	}):Play()
	
	local t = TweenService:Create(toggleButton, tweenInfo, {Size = baseSize})
	t:Play()
	t.Completed:Wait()
	startBreathingAnimation()
end)

startBreathingAnimation()

-- ============================================
-- FPS COUNTER
-- ============================================

local lastUpdate = tick()
local frameCount = 0

local fpsConnection = RunService.RenderStepped:Connect(function()
	frameCount = frameCount + 1
	local now = tick()
	
	if now - lastUpdate >= 0.5 then
		local fps = math.floor(frameCount / (now - lastUpdate))
		fpsLabel.Text = "FPS: " .. fps
		fpsLabel.TextColor3 = fps >= 55 and Color3.fromRGB(100, 255, 100)
			or fps >= 30 and Color3.fromRGB(255, 200, 100)
			or Color3.fromRGB(255, 100, 100)
		
		frameCount = 0
		lastUpdate = now
	end
end)

-- ============================================
-- HOTKEY & AUTO-APPLY
-- ============================================

local hotkeyConnection
if not isMobile then
	hotkeyConnection = UserInputService.InputBegan:Connect(function(input, processed)
		if not processed and input.KeyCode == Enum.KeyCode.G then
			screenGui.Enabled = not screenGui.Enabled
		end
	end)
end

local characterConnection = player.CharacterAdded:Connect(function()
	screenGui.Enabled = false
	task.wait(1)
	applyPerformanceSettings(getLastQuality())
end)

local handleNewParticle = debounce(function(obj)
	local preset = QUALITY_PRESETS[currentQuality]
	if preset and obj and obj.Parent then
		pcall(function() obj.Enabled = preset.particlesEnabled end)
	end
end, 0.1)

local descendantConnection = Workspace.DescendantAdded:Connect(function(obj)
	if obj:IsA("ParticleEmitter") or obj:IsA("Smoke") or obj:IsA("Fire") or obj:IsA("Sparkles") then
		handleNewParticle(obj)
	end
end)

task.delay(2, function()
	applyPerformanceSettings(getLastQuality())
	if buttons[currentQuality] then
		buttons[currentQuality].BackgroundTransparency = 0.1
	end
end)

-- ============================================
-- CLEANUP
-- ============================================

local function cleanup()
	stopAllAnimations()
	if fpsConnection then fpsConnection:Disconnect() end
	if hotkeyConnection then hotkeyConnection:Disconnect() end
	if characterConnection then characterConnection:Disconnect() end
	if descendantConnection then descendantConnection:Disconnect() end
	if screenGui then screenGui:Destroy() end
	if toggleScreenGui then toggleScreenGui:Destroy() end
end

Players.PlayerRemoving:Connect(function(removingPlayer)
	if removingPlayer == player then
		cleanup()
	end
end)

print("═══════════════════════════════════════")
print("🎮 Performance Settings Loaded (OPTIMIZED)")
print("📱 Platform: " .. (isMobile and "Mobile" or "Desktop"))
print(isMobile and "📌 Tap ⚙️ to open settings" or "📌 Press G or click ⚙️")
print("✨ Animations: Pulse, Breathing, Hover")
print("═══════════════════════════════════════")
