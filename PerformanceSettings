-- ============================================
-- ROBLOX PERFORMANCE SETTINGS SCRIPT v3.5
-- Author: ItoRenz00
-- ============================================
-- Location: StarterPlayer > StarterPlayerScripts
-- Description: Advanced graphics quality manager with FPS counter
-- and dynamic performance optimization
-- ============================================

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local camera = Workspace.CurrentCamera or Workspace:GetPropertyChangedSignal("CurrentCamera"):Wait()

-- ============================================
-- CONFIGURATION
-- ============================================

local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

local QUALITY_PRESETS = {
	Low = {
		renderDistance = 300,
		shadowsEnabled = false,
		particlesEnabled = false,
		postProcessing = false,
		fogEnabled = true,
		fogStart = 0,
		fogEnd = 300,
		brightness = 1.8,
		technology = Enum.Technology.Legacy,
		castShadow = false,
		environmentSpecularScale = 0,
		environmentDiffuseScale = 0.1,
		ambientIntensity = 0.4,
		outdoorAmbient = Color3.fromRGB(120, 120, 120),
		reflectance = 0
	},
	Medium = {
		renderDistance = 900,
		shadowsEnabled = true,
		particlesEnabled = true,
		postProcessing = true,
		fogEnabled = false,
		fogStart = 0,
		fogEnd = 100000,
		brightness = 2.2,
		technology = Enum.Technology.ShadowMap,
		castShadow = true,
		environmentSpecularScale = 0.2,
		environmentDiffuseScale = 0.4,
		ambientIntensity = 0.6,
		outdoorAmbient = Color3.fromRGB(130, 130, 130),
		reflectance = 0.15
	},
	High = {
		renderDistance = 1800,
		shadowsEnabled = true,
		particlesEnabled = true,
		postProcessing = true,
		fogEnabled = false,
		fogStart = 0,
		fogEnd = 100000,
		brightness = 2.6,
		technology = Enum.Technology.Future,
		castShadow = true,
		environmentSpecularScale = 0.35,
		environmentDiffuseScale = 0.6,
		ambientIntensity = 0.7,
		outdoorAmbient = Color3.fromRGB(135, 135, 135),
		reflectance = 0.25
	},
	Cinematic = {
		renderDistance = 2500,
		shadowsEnabled = true,
		particlesEnabled = true,
		postProcessing = true,
		fogEnabled = false,
		fogStart = 0,
		fogEnd = 100000,
		brightness = 3,
		technology = Enum.Technology.Future,
		castShadow = true,
		environmentSpecularScale = 0.5,
		environmentDiffuseScale = 0.8,
		ambientIntensity = 0.8,
		outdoorAmbient = Color3.fromRGB(140, 140, 140),
		reflectance = 0.1
	}
}

local COLORS = {
	Low = Color3.fromRGB(255, 100, 100),
	Medium = Color3.fromRGB(255, 180, 60),
	High = Color3.fromRGB(100, 200, 100),
	Cinematic = Color3.fromRGB(138, 43, 226)
}

-- Default quality preset
local currentQuality = "Cinematic"

-- ============================================
-- UTILITY FUNCTIONS
-- ============================================

local function saveQuality(qualityName)
	currentQuality = qualityName
	pcall(function()
		player:SetAttribute("PreferredQuality", qualityName)
	end)
end

local function getLastQuality()
	local success, saved = pcall(function()
		return player:GetAttribute("PreferredQuality")
	end)
	return (success and saved and QUALITY_PRESETS[saved]) and saved or "Cinematic"
end

local function debounce(func, wait)
	local lastCall = 0
	return function(...)
		local now = tick()
		if now - lastCall >= wait then
			lastCall = now
			return func(...)
		end
	end
end

-- ============================================
-- PERFORMANCE SETTINGS APPLICATION
-- ============================================

local isApplying = false
local applyQueue = nil

local function applyPerformanceSettings(qualityName)
	if isApplying then
		applyQueue = qualityName
		return
	end

	local preset = QUALITY_PRESETS[qualityName]
	if not preset then return end

	isApplying = true

	print("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━")
	print("🎮 Applying " .. qualityName:upper() .. " Graphics Settings")
	print("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━")

	-- Render Distance
	pcall(function()
		if player.Character then
			player.CameraMaxZoomDistance = preset.renderDistance
			player.CameraMinZoomDistance = 0.5
		end
		print("✓ Render Distance: " .. preset.renderDistance)
	end)

	-- Lighting Configuration
	pcall(function()
		Lighting.Technology = preset.technology
		Lighting.GlobalShadows = preset.shadowsEnabled
		Lighting.EnvironmentSpecularScale = preset.environmentSpecularScale
		Lighting.EnvironmentDiffuseScale = preset.environmentDiffuseScale
		Lighting.Brightness = preset.brightness
		Lighting.Ambient = Color3.new(preset.ambientIntensity, preset.ambientIntensity, preset.ambientIntensity)
		Lighting.OutdoorAmbient = preset.outdoorAmbient
		print("✓ Lighting: " .. tostring(preset.technology))
		print("✓ Shadows: " .. (preset.shadowsEnabled and "ON" or "OFF"))
	end)

	-- Parts Processing (Batch Processing)
	task.spawn(function()
		local partsProcessed = 0
		local batchSize = 50

		pcall(function()
			local allParts = Workspace:GetDescendants()

			for i = 1, #allParts do
				local obj = allParts[i]
				if obj:IsA("BasePart") and obj.Parent then
					pcall(function()
						obj.CastShadow = preset.castShadow
						if obj.Material ~= Enum.Material.Plastic and obj.Material ~= Enum.Material.SmoothPlastic then
							obj.Reflectance = preset.reflectance
						end
					end)
					partsProcessed = partsProcessed + 1
				end

				if i % batchSize == 0 then
					task.wait()
				end
			end

			print("✓ Parts Processed: " .. partsProcessed)
		end)
	end)

	-- Particle Effects Management
	task.spawn(function()
		local particleCount = 0
		pcall(function()
			for _, obj in ipairs(Workspace:GetDescendants()) do
				if (obj:IsA("ParticleEmitter") or obj:IsA("Smoke") or obj:IsA("Fire") or obj:IsA("Sparkles")) and obj.Parent then
					pcall(function()
						obj.Enabled = preset.particlesEnabled
					end)
					particleCount = particleCount + 1
				end
			end
			print("✓ Particles: " .. (preset.particlesEnabled and "ON" or "OFF"))
		end)
	end)

	-- Post Processing Effects
	pcall(function()
		for _, effect in ipairs(Lighting:GetChildren()) do
			if effect:IsA("PostEffect") or effect:IsA("Atmosphere") then
				pcall(function() effect:Destroy() end)
			end
		end

		if preset.postProcessing then
			local bloom = Instance.new("BloomEffect")
			bloom.Intensity = qualityName == "Cinematic" and 0.5 or (qualityName == "High" and 0.3 or 0.2)
			bloom.Size = qualityName == "Cinematic" and 32 or (qualityName == "High" and 24 or 16)
			bloom.Threshold = qualityName == "Cinematic" and 1.2 or (qualityName == "High" and 1.5 or 2)
			bloom.Parent = Lighting

			if qualityName == "High" or qualityName == "Cinematic" then
				local sunrays = Instance.new("SunRaysEffect")
				sunrays.Intensity = qualityName == "Cinematic" and 0.05 or 0.03
				sunrays.Spread = qualityName == "Cinematic" and 0.8 or 0.6
				sunrays.Parent = Lighting
			end

			local colorCorrection = Instance.new("ColorCorrectionEffect")
			colorCorrection.Brightness = qualityName == "Cinematic" and 0.03 or (qualityName == "High" and 0.02 or 0.01)
			colorCorrection.Contrast = qualityName == "Cinematic" and 0.1 or (qualityName == "High" and 0.05 or 0.02)
			colorCorrection.Saturation = qualityName == "Cinematic" and 0.15 or (qualityName == "High" and 0.08 or 0.05)
			colorCorrection.TintColor = Color3.fromRGB(255, 255, 255)
			colorCorrection.Parent = Lighting

			if qualityName == "Cinematic" then
				local atmosphere = Instance.new("Atmosphere")
				atmosphere.Density = 0.3
				atmosphere.Offset = 0.25
				atmosphere.Color = Color3.fromRGB(199, 199, 199)
				atmosphere.Decay = Color3.fromRGB(106, 112, 125)
				atmosphere.Glare = 0.2
				atmosphere.Haze = 1.2
				atmosphere.Parent = Lighting
			end

			print("✓ Post Processing: " .. qualityName)
		else
			print("✓ Post Processing: OFF")
		end
	end)

	-- Fog Configuration
	pcall(function()
		Lighting.FogEnabled = preset.fogEnabled
		if preset.fogEnabled then
			Lighting.FogStart = preset.fogStart
			Lighting.FogEnd = preset.fogEnd
			Lighting.FogColor = Color3.fromRGB(192, 192, 192)
		end
		print("✓ Fog: " .. (preset.fogEnabled and "ON" or "OFF"))
	end)

	print("✅ " .. qualityName:upper() .. " Applied!")
	print("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━")

	saveQuality(qualityName)
	isApplying = false

	if applyQueue then
		local queued = applyQueue
		applyQueue = nil
		applyPerformanceSettings(queued)
	end
end

-- ============================================
-- GUI CREATION
-- ============================================

-- Settings Panel ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PerformanceGui"
screenGui.Enabled = false
screenGui.ResetOnSpawn = false
screenGui.DisplayOrder = 100
screenGui.IgnoreGuiInset = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.Parent = playerGui

-- Toggle Button ScreenGui
local toggleScreenGui = Instance.new("ScreenGui")
toggleScreenGui.Name = "PerformanceToggle"
toggleScreenGui.ResetOnSpawn = false
toggleScreenGui.DisplayOrder = 101
toggleScreenGui.IgnoreGuiInset = true
toggleScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
toggleScreenGui.Parent = playerGui

-- Main Settings Frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = isMobile and UDim2.new(0, 140, 0, 200) or UDim2.new(0, 200, 0, 260)
mainFrame.Position = isMobile and UDim2.new(1, -145, 0, 80) or UDim2.new(1, -205, 0, 100)
mainFrame.AnchorPoint = Vector2.new(1, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 32)
mainFrame.BorderSizePixel = 0
mainFrame.ClipsDescendants = false
mainFrame.Parent = screenGui

local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 14)
frameCorner.Parent = mainFrame

local frameStroke = Instance.new("UIStroke")
frameStroke.Color = Color3.fromRGB(60, 60, 75)
frameStroke.Thickness = 1
frameStroke.Transparency = 0.5
frameStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
frameStroke.Parent = mainFrame

-- Header Section
local header = Instance.new("Frame")
header.Name = "Header"
header.Size = UDim2.new(1, 0, 0, isMobile and 32 or 38)
header.BackgroundColor3 = Color3.fromRGB(32, 32, 42)
header.BorderSizePixel = 0
header.Parent = mainFrame

local headerCorner = Instance.new("UICorner")
headerCorner.CornerRadius = UDim.new(0, 14)
headerCorner.Parent = header

local headerCover = Instance.new("Frame")
headerCover.Size = UDim2.new(1, 0, 0, 14)
headerCover.Position = UDim2.new(0, 0, 1, -14)
headerCover.BackgroundColor3 = Color3.fromRGB(32, 32, 42)
headerCover.BorderSizePixel = 0
headerCover.Parent = header

-- Title Label
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Size = UDim2.new(1, -40, 1, 0)
titleLabel.Position = UDim2.new(0, isMobile and 8 or 12, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "⚡ GRAPHICS"
titleLabel.TextColor3 = Color3.fromRGB(245, 245, 250)
titleLabel.TextSize = isMobile and 10 or 13
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = header

-- Close Button
local closeBtn = Instance.new("TextButton")
closeBtn.Name = "CloseButton"
closeBtn.Size = UDim2.new(0, isMobile and 24 or 28, 0, isMobile and 24 or 28)
closeBtn.Position = UDim2.new(1, isMobile and -28 or -32, 0.5, 0)
closeBtn.AnchorPoint = Vector2.new(0, 0.5)
closeBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 62)
closeBtn.BorderSizePixel = 0
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.fromRGB(220, 220, 230)
closeBtn.TextSize = isMobile and 12 or 14
closeBtn.Font = Enum.Font.GothamBold
closeBtn.AutoButtonColor = false
closeBtn.Parent = header

local closeBtnCorner = Instance.new("UICorner")
closeBtnCorner.CornerRadius = UDim.new(0, 7)
closeBtnCorner.Parent = closeBtn

closeBtn.MouseButton1Click:Connect(function()
	screenGui.Enabled = false
end)

closeBtn.MouseEnter:Connect(function()
	TweenService:Create(closeBtn, TweenInfo.new(0.15), {
		BackgroundColor3 = Color3.fromRGB(220, 80, 80)
	}):Play()
end)

closeBtn.MouseLeave:Connect(function()
	TweenService:Create(closeBtn, TweenInfo.new(0.15), {
		BackgroundColor3 = Color3.fromRGB(50, 50, 62)
	}):Play()
end)

-- Buttons Container
local container = Instance.new("Frame")
container.Name = "Container"
container.Size = UDim2.new(1, isMobile and -12 or -16, 1, isMobile and -42 or -50)
container.Position = UDim2.new(0, isMobile and 6 or 8, 0, isMobile and 36 or 42)
container.BackgroundTransparency = 1
container.Parent = mainFrame

local layout = Instance.new("UIListLayout")
layout.Padding = UDim.new(0, isMobile and 4 or 5)
layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Parent = container

-- FPS Counter
local fpsLabel = Instance.new("TextLabel")
fpsLabel.Name = "FPSLabel"
fpsLabel.Size = UDim2.new(1, 0, 0, isMobile and 16 or 18)
fpsLabel.BackgroundTransparency = 1
fpsLabel.Text = "FPS: --"
fpsLabel.TextColor3 = Color3.fromRGB(120, 220, 120)
fpsLabel.TextSize = isMobile and 9 or 11
fpsLabel.Font = Enum.Font.GothamBold
fpsLabel.LayoutOrder = 5
fpsLabel.Parent = container

-- Status Label
local statusLabel = Instance.new("TextLabel")
statusLabel.Name = "StatusLabel"
statusLabel.Size = UDim2.new(1, 0, 0, isMobile and 16 or 18)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "Active: " .. getLastQuality()
statusLabel.TextColor3 = Color3.fromRGB(190, 190, 200)
statusLabel.TextSize = isMobile and 8 or 10
statusLabel.Font = Enum.Font.Gotham
statusLabel.LayoutOrder = 6
statusLabel.Parent = container

-- Quality Buttons
local qualities = {"Cinematic", "High", "Medium", "Low"}
local buttons = {}

for index, qualityName in ipairs(qualities) do
	local button = Instance.new("TextButton")
	button.Name = qualityName .. "Button"
	button.Size = UDim2.new(1, 0, 0, isMobile and 28 or 35)
	button.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
	button.BorderSizePixel = 0
	button.Text = qualityName:upper()
	button.TextColor3 = Color3.fromRGB(230, 230, 240)
	button.TextSize = isMobile and 9 or 11
	button.Font = Enum.Font.GothamBold
	button.AutoButtonColor = false
	button.LayoutOrder = index
	button.Parent = container

	buttons[qualityName] = button

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, isMobile and 7 or 9)
	corner.Parent = button

	local buttonStroke = Instance.new("UIStroke")
	buttonStroke.Name = "ButtonStroke"
	buttonStroke.Color = COLORS[qualityName]
	buttonStroke.Thickness = 0
	buttonStroke.Transparency = 0
	buttonStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	buttonStroke.Parent = button

	local indicator = Instance.new("Frame")
	indicator.Name = "Indicator"
	indicator.Size = UDim2.new(0, isMobile and 6 or 8, 0, isMobile and 6 or 8)
	indicator.Position = UDim2.new(0, isMobile and 8 or 10, 0.5, 0)
	indicator.AnchorPoint = Vector2.new(0, 0.5)
	indicator.BackgroundColor3 = COLORS[qualityName]
	indicator.BorderSizePixel = 0
	indicator.Visible = false
	indicator.Parent = button

	local indicatorCorner = Instance.new("UICorner")
	indicatorCorner.CornerRadius = UDim.new(1, 0)
	indicatorCorner.Parent = indicator

	-- Button Interactions
	button.MouseEnter:Connect(function()
		if currentQuality ~= qualityName then
			TweenService:Create(button, TweenInfo.new(0.2), {
				BackgroundColor3 = Color3.fromRGB(50, 50, 62)
			}):Play()
			TweenService:Create(buttonStroke, TweenInfo.new(0.2), {
				Thickness = 1.5
			}):Play()
		end
	end)

	button.MouseLeave:Connect(function()
		if currentQuality ~= qualityName then
			TweenService:Create(button, TweenInfo.new(0.2), {
				BackgroundColor3 = Color3.fromRGB(40, 40, 50)
			}):Play()
			TweenService:Create(buttonStroke, TweenInfo.new(0.2), {
				Thickness = 0
			}):Play()
		end
	end)

	button.MouseButton1Click:Connect(function()
		applyPerformanceSettings(qualityName)
		statusLabel.Text = "Active: " .. qualityName

		for name, btn in pairs(buttons) do
			local stroke = btn:FindFirstChild("ButtonStroke")
			local ind = btn:FindFirstChild("Indicator")

			if name == qualityName then
				btn.BackgroundColor3 = Color3.fromRGB(50, 50, 62)
				stroke.Thickness = 2
				ind.Visible = true
			else
				btn.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
				stroke.Thickness = 0
				ind.Visible = false
			end
		end

		if isMobile then
			task.wait(0.3)
			screenGui.Enabled = false
		end
	end)
end

-- ============================================
-- TOGGLE BUTTON
-- ============================================

local toggleButton = Instance.new("TextButton")
toggleButton.Name = "SettingsToggleButton"

if isMobile then
	toggleButton.Size = UDim2.new(0, 33, 0, 33)
	toggleButton.Position = UDim2.new(1, -38, 0.5, 30)
	toggleButton.AnchorPoint = Vector2.new(0, 0.5)
else
	toggleButton.Size = UDim2.new(0, 35, 0, 35)
	toggleButton.Position = UDim2.new(1, -40, 0.5, 15)
	toggleButton.AnchorPoint = Vector2.new(0, 0.5)
end

toggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 52)
toggleButton.BorderSizePixel = 0
toggleButton.Text = "⚙"
toggleButton.TextSize = isMobile and 18 or 20
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextColor3 = Color3.fromRGB(235, 235, 245)
toggleButton.Parent = toggleScreenGui

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0.5, 0)
toggleCorner.Parent = toggleButton

local toggleStroke = Instance.new("UIStroke")
toggleStroke.Color = Color3.fromRGB(70, 70, 85)
toggleStroke.Thickness = 2
toggleStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
toggleStroke.Parent = toggleButton

local baseSize = toggleButton.Size
local isToggling = false

toggleButton.MouseButton1Click:Connect(function()
	if isToggling then return end
	isToggling = true

	screenGui.Enabled = not screenGui.Enabled

	task.spawn(function()
		local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Quad)

		TweenService:Create(toggleButton, tweenInfo, {
			Size = UDim2.new(baseSize.X.Scale, baseSize.X.Offset * 0.9, baseSize.Y.Scale, baseSize.Y.Offset * 0.9)
		}):Play()

		task.wait(0.1)

		TweenService:Create(toggleButton, TweenInfo.new(0.15, Enum.EasingStyle.Back), {
			Size = baseSize
		}):Play()

		task.wait(0.15)
		isToggling = false
	end)
end)

if not isMobile then
	toggleButton.MouseEnter:Connect(function()
		TweenService:Create(toggleButton, TweenInfo.new(0.2), {
			BackgroundColor3 = Color3.fromRGB(60, 80, 115)
		}):Play()
		TweenService:Create(toggleStroke, TweenInfo.new(0.2), {
			Color = Color3.fromRGB(95, 125, 170)
		}):Play()
	end)

	toggleButton.MouseLeave:Connect(function()
		TweenService:Create(toggleButton, TweenInfo.new(0.2), {
			BackgroundColor3 = Color3.fromRGB(40, 40, 52)
		}):Play()
		TweenService:Create(toggleStroke, TweenInfo.new(0.2), {
			Color = Color3.fromRGB(70, 70, 85)
		}):Play()
	end)
end

-- ============================================
-- FPS COUNTER
-- ============================================

local lastUpdate = tick()
local frameCount = 0

local fpsConnection = RunService.RenderStepped:Connect(function()
	frameCount = frameCount + 1
	local now = tick()

	if now - lastUpdate >= 0.5 then
		local fps = math.floor(frameCount / (now - lastUpdate))
		fpsLabel.Text = "FPS: " .. fps
		fpsLabel.TextColor3 = fps >= 55 and Color3.fromRGB(120, 220, 120)
			or fps >= 30 and Color3.fromRGB(255, 200, 100)
			or Color3.fromRGB(255, 100, 100)

		frameCount = 0
		lastUpdate = now
	end
end)

-- ============================================
-- AUTO-APPLY ON CHARACTER SPAWN
-- ============================================

local characterConnection = player.CharacterAdded:Connect(function()
	screenGui.Enabled = false
	task.wait(1)
	applyPerformanceSettings(getLastQuality())
end)

-- ============================================
-- DYNAMIC PARTICLE HANDLING
-- ============================================

local handleNewParticle = debounce(function(obj)
	local preset = QUALITY_PRESETS[currentQuality]
	if preset and obj and obj.Parent then
		pcall(function() obj.Enabled = preset.particlesEnabled end)
	end
end, 0.1)

local descendantConnection = Workspace.DescendantAdded:Connect(function(obj)
	if obj:IsA("ParticleEmitter") or obj:IsA("Smoke") or obj:IsA("Fire") or obj:IsA("Sparkles") then
		handleNewParticle(obj)
	end
end)

-- ============================================
-- INITIAL QUALITY APPLICATION
-- ============================================

task.delay(2, function()
	local savedQuality = getLastQuality()
	applyPerformanceSettings(savedQuality)

	if buttons[savedQuality] then
		buttons[savedQuality].BackgroundColor3 = Color3.fromRGB(50, 50, 62)
		local stroke = buttons[savedQuality]:FindFirstChild("ButtonStroke")
		local indicator = buttons[savedQuality]:FindFirstChild("Indicator")
		if stroke then stroke.Thickness = 2 end
		if indicator then indicator.Visible = true end
	end

	statusLabel.Text = "Active: " .. savedQuality
end)

-- ============================================
-- CLEANUP
-- ============================================

local function cleanup()
	if fpsConnection then fpsConnection:Disconnect() end
	if characterConnection then characterConnection:Disconnect() end
	if descendantConnection then descendantConnection:Disconnect() end
	if screenGui then screenGui:Destroy() end
	if toggleScreenGui then toggleScreenGui:Destroy() end
end

Players.PlayerRemoving:Connect(function(removingPlayer)
	if removingPlayer == player then
		cleanup()
	end
end)

-- ============================================
-- STARTUP MESSAGE
-- ============================================

print("═══════════════════════════════════════")
print("🎮 Performance Settings v3.5 Loaded")
print("👤 Author: ItoRenz00")
print("📱 Platform: " .. (isMobile and "Mobile" or "Desktop"))
print("⭐ Default Quality: Cinematic")
print("📋 Button Order: Cinematic → High → Medium → Low")
print("✨ Enhanced UI with color-coded indicators")
print("⚡ Smooth animations and hover effects")
print("═══════════════════════════════════════")
